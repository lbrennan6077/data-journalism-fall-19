knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor')
# Load Tidyverse and Janitor
# Install Janitor package
install.packages('janitor')
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
# Load data and store it as an object called mingo
```{r}
# Load data and store it as an object called mingo
```{r}
# Load data and store it as an object called mingo
```{r}
# Load data and store it as an object called mingo
```{r}
mingo <- read_tsv("data/arcos-wv-mingo-54059-itemized.tsv")
glimpse(mingo)
summary(mingo)
view(mingo)
view(mingo)
# use the clean_names function in janitor to
mingo <- clean_names(mingo)
# write out glimpse to look at the results
glimpse(mingo)
mingo_working <- mingo %>%
mutate(distributor_dea_no = reporter_dea_no)
mingo_working <- mingo %>%
mutate(distributor_dea_no = reporter_dea_no) %>%
select(distributor_dea_no, everything())
mingo_working <- mingo %>%
mutate(distributor_dea_no = reporter_dea_no) %>%
select(distributor_dea_no, everything()) %>%
select(-reporter_dea_no)
View(mingo_working)
View(mingo_working)
mingo_working <- mingo %>%
rename(distributor_dea_no = reporter_dea_no)
mingo_working <- mingo %>%
select(contains("buyer")) %>%
unite(buyer_address_complete, buyer_address1, buyer_city, buyer_state, buyer_zip)
mingo_working <- mingo %>%
select(contains("buyer")) %>%
unite(buyer_address_complete, buyer_address1, buyer_city, buyer_state, buyer_zip, remove = 'F')
mingo_working <- mingo %>%
select(contains("buyer")) %>%
unite(buyer_address_complete, buyer_address1, buyer_city, buyer_state, buyer_zip, remove = 'F', sep=" ")
mingo_working <- mingo %>%
mutate(buyer_address_complete = paste0(buyer_address1, buyer_city, buyer_state, buyer_zip))
mingo_working <- mingo %>%
mutate(buyer_address_complete = paste0(buyer_address1," ", buyer_city, ", ", buyer_state, " ", buyer_zip))
mingo_working <- mingo %>%
mutate(buyer_address_complete = paste0(buyer_address1," ", buyer_city, ", ", buyer_state, " ", buyer_zip))
mingo_working <- mingo %>%
mutate(reporter_address_complete = paste0(reporter_address1," ", reporter_address2," ", reporter_city, ", ", reporter_state, " ", reporter_zip))
mingo_working <- mingo %>%
mutate(pills_category = if_else(dosage_unit > 10000, "large shipment", "not large shipment"))
mingo_working <- mingo %>%
mutate(pills_category = if_else(dosage_unit > 10000, "large shipment", "not large shipment"))
mingo_working <- mingo %>%
mutate(pills_category = if_else(dosage_unit > 10000, "large shipment", if_else(dosage_unit > 5000, "medium shipment", "small shipment")))
mingo_working <- mingo %>%
mutate(pills_category = case_when(
dosage_unit > 10000 ~ "large shipment",
dosage_unit > 5000 ~ "medium shipment",
TRUE ~ "small shipment")
)
state_distribution <- mingo %>%
mutate(reporter_state = case_when(
reporter_state = WV ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",)
)
state_distribution <- mingo %>%
mutate(reporter_state = case_when(
reporter_state == WV ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",)
)
state_distribution <- mingo %>%
mutate(reporter_state = case_when(
reporter_state == "WV" ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",)
)
View(state_distribution)
View(state_distribution)
#state_distribution <- mingo %>%
#mutate(reporter_state = case_when(
#reporter_state == "WV" ~ "in_state_distribution",
#TRUE ~ "out_of_state_distribution",)
state_distribution <- mingo %>%
mutate(reporter_state = if_else(reporter_state = WV, "in_state_distribution", "out_of_state_distribution"))
#state_distribution <- mingo %>%
#mutate(reporter_state = case_when(
#reporter_state == "WV" ~ "in_state_distribution",
#TRUE ~ "out_of_state_distribution",)
state_distribution <- mingo %>%
mutate(reporter_state = if_else(reporter_state == WV, "in_state_distribution", "out_of_state_distribution"))
#state_distribution <- mingo %>%
#mutate(reporter_state = case_when(
#reporter_state == "WV" ~ "in_state_distribution",
#TRUE ~ "out_of_state_distribution",)
state_distribution <- mingo %>%
mutate(reporter_state = if_else(reporter_state = WV, "in_state_distribution", "out_of_state_distribution"))
#state_distribution <- mingo %>%
#mutate(reporter_state = case_when(
#reporter_state == "WV" ~ "in_state_distribution",
#TRUE ~ "out_of_state_distribution",)
state_distribution_1 <- mingo %>%
mutate(reporter_state = if_else(reporter_state = WV, "in_state_distribution", "out_of_state_distribution"))
#state_distribution <- mingo %>%
#mutate(reporter_state = case_when(
#reporter_state == "WV" ~ "in_state_distribution",
#TRUE ~ "out_of_state_distribution",)
state_distribution_1 <- mingo %>%
mutate(reporter_state = if_else(reporter_state = WV, "in_state_distribution", "out_of_state_distribution"))
#state_distribution <- mingo %>%
#mutate(reporter_state = case_when(
#reporter_state == "WV" ~ "in_state_distribution",
#TRUE ~ "out_of_state_distribution",)
state_distribution_1 <- mingo %>%
mutate(reporter_state = if_else(reporter_state == WV, "in_state_distribution", "out_of_state_distribution"))
state_distribution <- mingo %>%
mutate(state_distribution = case_when(
reporter_state == "WV" ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",)
#state_distribution_1 <- mingo %>%
#mutate(reporter_state = if_else(reporter_state == WV, #"in_state_distribution", "out_of_state_distribution"))
)
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n())
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n()) %>%
arrange(desc(shipments))
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n()) %>%
arrange(desc(shipments)) %>%
filter(shipments > 1000)
mingo %>%
filter(drug_name == "HYDROCODONE") %>%
group_by(buyer_name) %>%
summarise(shipments = n()) %>%
arrange(desc(shipments)) %>%
filter(shipments > 1000)
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit)
) %>%
arrange(desc(total_pills))
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit)
) %>%
arrange(desc(avg_pills_per_shipment))
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(max_pills_in_shipment))
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit),
median_pills_in_shipment = median(dosage_unit)
) %>%
arrange(desc(max_pills_in_shipment))
mingo %>%
group_by(buyer_name, buyer_dea_no) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(buyer_name)
mingo %>%
group_by(buyer_name, buyer_dea_no, buyer_city) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(buyer_name)
mingo %>%
group_by(buyer_name, buyer_dea_no, buyer_city, buyer_address1) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(buyer_name)
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n()
) %>%
mutate(shipments_rank = dense_rank(shipments)) %>%
arrange(desc(shipments_rank))
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n()
) %>%
mutate(shipments_rank = percent_rank(shipments)) %>%
arrange(desc(shipments_rank))
mingo %>%
group_by(buyer_name) %>%
summarise(shipments = n()
) %>%
mutate(shipments_rank = percent_rank(shipments)) %>%
arrange(desc(shipments_rank))
mingo %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy))
mingo %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy))
# For getting rid of scientific notation
options(scipen=999)
mingo %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = pills_per_pharmacy/total_pills) %>%
arrange(desc(pharmacy_percent_total_pills))
mingo %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = (pills_per_pharmacy/total_pills)*100) %>%
arrange(desc(pharmacy_percent_total_pills))
mingo %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills))
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor')
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor')
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name)%>%
summarise(pill_total=sum(dosage_unit))%>%
arrange(desc(pill_total))
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name)%>%
summarise(pill_total=sum(dosage_unit)) %>%
arrange(desc(pill_total))
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name)%>%
summarise(pill_total = sum(dosage_unit)) %>%
arrange(desc(pill_total))
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name)%>%
summarise(pill_total = sum(dosage_unit)) %>%
arrange(desc(pill_total))
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name)%>%
summarise(pill_total = sum(dosage_unit)) %>%
arrange(desc(pill_total))
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name) %>%
summarise(pill_total = sum(dosage_unit)) %>%
arrange(desc(pill_total))
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor')
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name) %>%
summarise(pill_total = sum(dosage_unit)) %>%
arrange(desc(pill_total))
#comment with the answer -- what is the most significant combo?
mingo %>%
group_by(combined_labeler_name, reporter_name, buyer_name, reporter_address1, reporter_dea_no, reporter_city) %>%
summarise(pill_total = sum(dosage_unit)) %>%
arrange(reporter_name)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor')
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor')
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor', repos = "http://cran.us.r-project.org")
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor', repos = "http://cran.us.r-project.org")
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
state_distribution <- mingo %>%
mutate(state_distribution = case_when(
reporter_state == "WV" ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",)
)
state_distribution <- mingo %>%
mutate(state_distribution = case_when(
reporter_state == "WV" ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",))
state_distribution <- mingo %>%
mutate(state_distribution = case_when(
reporter_state == "WV" ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",))
state_distribution <- mingo %>%
mutate(state_distribution = case_when(
reporter_state == "WV" ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",)
)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Install Janitor package
install.packages('janitor', repos = "http://cran.us.r-project.org")
# Load Tidyverse and Janitor
library(tidyverse)
library(janitor)
# Load data and store it as an object called mingo
```{r}
state_distribution <- mingo %>%
mutate(state_distribution = case_when(
reporter_state == "WV" ~ "in_state_distribution",
TRUE ~ "out_of_state_distribution",)
)
